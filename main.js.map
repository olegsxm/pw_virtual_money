{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/guards/auth.guard.ts","webpack:///./src/app/shared/guards/login.guard.ts","webpack:///./src/app/shared/interceptors/api.interceptor.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/auth/auth.module.ngfactory\": [\n\t\t\"./src/app/modules/auth/auth.module.ngfactory.js\",\n\t\t\"default~modules-auth-auth-module-ngfactory~modules-dashboard-dashboard-module-ngfactory\",\n\t\t\"modules-auth-auth-module-ngfactory\"\n\t],\n\t\"./modules/dashboard/dashboard.module.ngfactory\": [\n\t\t\"./src/app/modules/dashboard/dashboard.module.ngfactory.js\",\n\t\t\"default~modules-auth-auth-module-ngfactory~modules-dashboard-dashboard-module-ngfactory\",\n\t\t\"modules-dashboard-dashboard-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\nimport {AuthGuard} from './shared/guards/auth.guard';\nimport {LoginGuard} from './shared/guards/login.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './modules/auth/auth.module#AuthModule',\n    canLoad: [LoginGuard]\n  },\n  {\n    path: 'dashboard',\n    loadChildren: './modules/dashboard/dashboard.module#DashboardModule',\n    canLoad: [AuthGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n\n<simple-notifications [options]=\"{\n      timeOut: 2500,\n      showProgressBar: true,\n      pauseOnHover: true,\n      clickToClose: false\n}\"></simple-notifications>\n\n<mat-progress-spinner\n  *ngIf=\"loading$ | async\"\n  class=\"spinner\"\n  color=\"primary\"\n  diameter=\"64\"\n  mode=\"indeterminate\">\n</mat-progress-spinner>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  constructor(private router: Router) {\n    router.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  navigationInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.loading$.next(true);\n    }\n    if (event instanceof NavigationEnd) {\n      this.loading$.next(false);\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loading$.next(false);\n    }\n    if (event instanceof NavigationError) {\n      this.loading$.next(false);\n    }\n  }\n}\n\n/**\n *  TODO: Create interface for all entities\n *  TODO: Implement adaptive design\n *  TODO: Add tests\n **/\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {ApiInterceptor} from './shared/interceptors/api.interceptor';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {SimpleNotificationsModule} from 'angular2-notifications';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    SimpleNotificationsModule.forRoot(),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanLoad, CanActivateChild} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth.service';\nimport {isNullOrUndefined} from 'util';\nimport {UsersService} from '../services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad, CanActivateChild {\n  constructor(\n    private authService: AuthService,\n    private userService: UsersService,\n    private router: Router\n  ) {}\n\n  private isAuth(): boolean {\n    const user = this.userService.getUser().value;\n    const token = this.authService.getToken();\n    if (!isNullOrUndefined(user) || !isNullOrUndefined(token)) {\n      return true;\n    }\n\n    this.router.navigate(['auth', 'sign-in']);\n    return false;\n  }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n\n  canActivateChild(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n\n  canLoad(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, CanActivateChild, CanLoad, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth.service';\nimport {isNullOrUndefined} from 'util';\nimport {UsersService} from '../services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate, CanLoad, CanActivateChild {\n  constructor(\n    private authService: AuthService,\n    private userService: UsersService,\n    private router: Router\n  ) {}\n\n  private isAuth(): boolean {\n    const user = this.userService.getUser().value;\n    if (isNullOrUndefined(user) || isNullOrUndefined(this.authService.getToken())) {\n      return true;\n    }\n    this.router.navigate(['dashboard']);\n    return false;\n  }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n\n  canLoad(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n\n  canActivateChild(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAuth();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {AuthService} from '../services/auth.service';\r\nimport {tap} from 'rxjs/operators';\r\nimport {NotificationsService} from 'angular2-notifications';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService, private notification: NotificationsService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.authService.getToken();\r\n\r\n    let request = req.clone({\r\n      url: `${environment.api}${req.url}`\r\n    });\r\n\r\n    if (token) {\r\n      request = request.clone({\r\n        headers: req.headers.append('Authorization', `Bearer ${token}`)\r\n      });\r\n    }\r\n    return next.handle(request)\r\n      .pipe(\r\n        tap((event: HttpEvent<any>) => {}, (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            this.notification.error('Error', err.error);\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {SignUpModel} from '../models/sign-up.model';\nimport {catchError, map, mergeMap, tap} from 'rxjs/operators';\nimport {UserModel} from '../models/user.model';\nimport {isNullOrUndefined} from 'util';\nimport {Router} from '@angular/router';\nimport {BehaviorSubject, MonoTypeOperatorFunction, of} from 'rxjs';\nimport {UsersService} from './users.service';\n\n/**\n *  name: test username\n *  email: testusername9@testusername.testusername\n *  password: testusername\n *\n *  email: user_user@user.user\n **/\n\nfunction  getUserInfo<T>(context): MonoTypeOperatorFunction<T> {\n  return mergeMap(response => context.getUserInfo()\n    .pipe(\n      tap((user: UserModel) => {\n        context.userService.setUser(user);\n        context.router.navigateByUrl('');\n      }),\n      catchError(err => of(err))\n    ));\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly LS_KEY_TOKEN = 'token';\n\n  private token: string = this.getToken();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private userService: UsersService\n  ) {\n  }\n\n  setToken(token: string): void {\n    localStorage.setItem(this.LS_KEY_TOKEN, token);\n    this.token = token;\n  }\n  getToken(): string | null {\n    return isNullOrUndefined(this.token) ? localStorage.getItem(this.LS_KEY_TOKEN) : this.token;\n  }\n  clearToken() {\n    this.token = null;\n    localStorage.removeItem(this.LS_KEY_TOKEN);\n  }\n\n  getUserInfo() {\n    return this.http.get(`api/protected/user-info`)\n      .pipe(\n        map((response: {user_info_token: UserModel}) => response.user_info_token),\n      );\n  }\n\n  signUp(data: SignUpModel) {\n    return this.http.post('users', data)\n      .pipe(\n        tap((token: {id_token: string}) => this.setToken(token.id_token)),\n        getUserInfo(this)\n      );\n  }\n  signIn(data: {email: string, password: string}) {\n    return this.http.post(`sessions/create`, data)\n      .pipe(\n        tap((token: {id_token: string}) => this.setToken(token.id_token)),\n        getUserInfo(this)\n      );\n  }\n\n  logout(): void {\n    this.clearToken();\n    this.userService.clearUser();\n    this.router.navigateByUrl('auth/sign-in');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport {UserModel} from '../models/user.model';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private readonly LS_KEY_USER = 'USER';\n  private readonly user: BehaviorSubject<UserModel> = new BehaviorSubject<UserModel>(JSON.parse(localStorage.getItem(this.LS_KEY_USER)));\n\n  constructor(private http: HttpClient) { }\n\n  setUser(user: UserModel): void {\n    this.user.next(user);\n    localStorage.setItem(this.LS_KEY_USER, JSON.stringify(user));\n  }\n  getUser(): BehaviorSubject<UserModel> {\n    return this.user;\n  }\n  updateUser(user: Partial<UserModel>): void {\n    this.user.next({...this.user.value, ...user});\n    this.setUser(this.user.value);\n  }\n  clearUser() {\n    this.user.next(null);\n    localStorage.removeItem(this.LS_KEY_USER);\n  }\n\n  getUserInfo() {\n    return this.http.get(`api/protected/user-info`)\n      .pipe(\n        map((response: {user_info_token: UserModel}) => response.user_info_token),\n      );\n  }\n\n  getRecipientUsers(filter: {filter: string}) {\n    return this.http.post('api/protected/users/list', filter );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://193.124.114.46:3001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}